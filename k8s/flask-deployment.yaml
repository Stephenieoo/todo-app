apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
  labels:
    app: flask-app
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1        # During the update, no more than one pod may be unavailable.
      maxSurge: 1              # During updates, a maximum of one additional Pod may be created.
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: stephanieoo/todo-flask-app:latest
        ports:
        - containerPort: 5000
        env:
        - name: MONGO_HOST
          value: "mongodb-service"
        - name: MONGO_PORT
          value: "27017"
        - name: FLASK_ENV
          value: "production"
        - name: PORT
          value: "5000"
        # set up probes
        livenessProbe:
          httpGet:
            path: /health  # health check route and flask homepage path
            port: 5000
          initialDelaySeconds: 30  # wait 30 seconds after the container starts before checking
          periodSeconds: 10  # check every 10 seconds
          timeoutSeconds: 5  # timeout after 5 seconds
          failureThreshold: 3  # 3 failure = restart container

        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 10  # wait 10 seconds before first check
          periodSeconds: 5  # check every 5 seconds
          timeoutSeconds: 3  # timeout after 3 seconds
          failureThreshold: 3  # 3 failure = not ready